# Production deploy and start main project app

    To deploy your todoapp to production, create an account with heroku, ensure you confirm the account by clicking on the link in your email address
    
    Then pull up your gemfile, move the sqlite3 gem to group development, test (ensure it's no longer in the top/main area of your gemfile)
    
    Add the following group at the bottom:
    
    group :production do
      gem 'pg'
    end
    
    Then run:
    bundle install --without production
    
    Then do another commit to capture the updates and modify the gemfile.lock file
    git add -A
    git commit -m "make app production ready"
    git push
    
    Then log-in to your heroku account:
    heroku login
    
    Enter in your email and password for your heroku account
    
    Add your public ssh key to your heroku account:
    heroku keys:add
    
    Enter when asked whether to upload public ssh key to heroku: Y
    
    Create a new production app in heroku:
    heroku create
    
    Rename it to something you like:
    heroku rename yourname-todoapp
    
    Deploy your local app to heroku:
    git push heroku master
    
    Then run the migrations in heroku:
    heroku run rails db:migrate
    
    Now check out your app at yourname-todoapp.herokuapp.com
    
    Enjoy with family and friends!
    
    Now let's start our main project app for this course:
    
    Navigate out of todoapp and into rails_projects directory
    
    From there (rails_projects directory), type in:
    rails new myrecipes
    
    This will build the new app
    
    Test it out by typing in:
    cd myrecipes
    
    Then run the rails server:
    rails s -b $IP -p $PORT
    
    Test out that you get the rails main welcome page from the browser, then shut down the server
    
    Initiate a git repo:
    git init
    
    Then make a commit:
    git add -A
    git commit -m "Initial commit"
    
    Create a new repository in your github account, then follow the steps (two lines) to move existing app to your github repo
    
    Then test it out and ensure your app is pointing to the right repo by typing in:
    git remote -v
    
    Reload the github page and ensure your latest commit/project is showing up
--------------------------------------------------------------------------------
# Integration test 

    Create an integration test for the pages:

    rails generate integration_test pages
    
    Then within the class PagesTest, type in the two tests:
    
    test "should get home" do
    get pages_home_url
    assert_response :success
    end
    
    test "should get root" do
    get root_url
    assert_response :success
    end
    
    run your test suite by typing in:
    rails test
    
    Add the two routes to the config/routes.rb file:
    root "pages#home"
    get 'pages/home', to: 'pages#home'
    
    Run the tests again
    
    Build out the pages_controller.rb file under app/controllers folder and add the home action
    
    class PagesController < ApplicationController
    def home
    end
    end
--------------------------------------------------------------------------------
# Create tables and models
    to generate a migration file for recipes:
    rails generate migration create_recipes
    
    Then open the migration file and fill in within the create_table :recipes method
    t.string :name
    t.text :description
    t.timestamps
    
    run the migration to create the table:
    rails db:migrate
    
    create a new file called recipe.rb under app/models folder (for the recipe model) and fill it in:
    class Recipe < ApplicationRecord
    
    end
    
    Test it out in the rails console
    
    to generate a migration file for chefs:
    rails generate migration create_chefs
    
    Then open the migration file and fill in within the create_table :chefs method
    t.string :chefname
    t.string :email
    t.timestamps
    
    run the migration to create the table:
    rails db:migrate
    
    create a new file called chef.rb under app/models folder (for the chef model) and fill it in:
    class Chef < ApplicationRecord
    
    end
--------------------------------------------------------------------------------